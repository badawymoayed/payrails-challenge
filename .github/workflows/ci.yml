name: API Test Automation CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # This job runs the FULL regression suite and creates the report data
  build_and_test_regression:
    runs-on: ubuntu-latest
    env:
      ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      - name: Run Full Regression Suite
        run: mvn clean test -Dgroups=regression
      - name: Upload ExtentReports Report (Regression)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ExtentReports-Report-Regression
          path: target/ExtentReport.html
      - name: Upload Allure Results (Raw Data for Deployment)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Allure-Results-Regression
          path: target/allure-results

  # This job runs a quick smoke test in parallel
  run_smoke_tests:
    runs-on: ubuntu-latest
    env:
      ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      - name: Run Smoke Test Suite
        run: mvn clean test -Dgroups=smoke
      - name: Upload ExtentReports Report (Smoke)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ExtentReports-Report-Smoke
          path: target/ExtentReport.html

  # This job depends on the REGRESSION run and handles the report deployment
  generate_allure_report:
    runs-on: ubuntu-latest
    needs: build_and_test_regression # Ensures this runs only after the full regression suite
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      # Step 1: Download the raw result data from the test job
      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: Allure-Results-Regression
          path: allure-results

      # Step 2: Generate the HTML report from the raw data
      - name: Generate Allure Report
        uses: allure-framework/allure-action@v1
        with:
          results_path: allure-results
          report_path: allure-report

      # Step 3: Upload the final HTML report for deployment
      - name: Upload artifact for deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report

      # Step 4: Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4