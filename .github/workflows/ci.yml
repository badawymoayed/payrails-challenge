name: API Test Automation CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # This job runs the FULL regression suite and creates the report data
  build_and_test_regression:
    runs-on: ubuntu-latest
    env:
      ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      - name: Run Full Regression Suite
        run: mvn clean test -Dgroups=regression
      - name: Upload ExtentReports Report (Regression)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ExtentReports-Report-Regression
          path: target/ExtentReport.html
      - name: Upload Allure Results (Raw Data)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Allure-Results-Regression
          path: target/allure-results

  # This job runs a quick smoke test in parallel
  run_smoke_tests:
    runs-on: ubuntu-latest
    env:
      ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      - name: Run Smoke Test Suite
        run: mvn clean test -Dgroups=smoke
      - name: Upload ExtentReports Report (Smoke)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ExtentReports-Report-Smoke
          path: target/ExtentReport.html

  # THIS JOB IS NOW CORRECTED
  # It generates the report and deploys it using the official GitHub Pages process
  allure_report:
    runs-on: ubuntu-latest
    needs: build_and_upload
    steps:
      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: Allure-Results
          path: allure-results

      - name: Generate Allure Report
        run: mvn allure:report

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
        with:
          name: Allure-Report
          path: target/allure-report

#      # Step 2: Generate the HTML report from the raw data
#      - name: Generate Allure Report
#        uses: allure-framework/allure-action@v2.10.0 # Using a stable, recent version
#        with:
#          results_path: allure-results
#          report_path: allure-report

      # Step 3: THIS IS THE KEY FIX - Upload the generated HTML report for deployment
#      - name: Upload artifact for deployment
#        uses: actions/upload-pages-artifact@v3
#        with:
#          path: ./allure-report

      # Step 4: This step now finds the artifact from Step 3 and deploys it
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v4